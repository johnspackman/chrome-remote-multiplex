{"version":3,"sources":["multiplex.js"],"names":["Protocol","require","EventEmitter","WebSocket","Express","Http","Url","Dot","PACKAGE","Logger","mode","log","LOG","addApi","self","apiName","api","name","fn","bind","tmp","replied","Promise","resolve","reject","ProxyDomain","remoteDebuggerProxy","data","DefaultProxyDomain","_enabled","send","devtoolsClient","sendImpl","t","enable","then","sendMessageToClient","id","result","reply","disable","RuntimeProxyDomain","_executionContexts","promises","push","all","method","params","context","contextId","DevtoolsClient","ws","on","detach","message","JSON","parse","onMessageFromClient","close","sendMessageToServer","broadcast","promisify","cb","debug","stringify","RemoteDebuggerProxy","multiplexServer","target","devtoolsClients","_idMap","_nextCommandId","_domainProxies","Runtime","options","descriptor","domains","forEach","domain","undefined","cmdEnable","cmdDisable","commands","command","url","originalWebSocketDebuggerUrl","replace","remoteClientHostname","code","emit","onMessageFromServer","client","length","i","splice","numberOfClients","autoClose","closeTarget","httpGet","hostname","port","remoteClientPort","path","request","socket","head","wss","Server","noServer","handleUpgrade","attach","map","originalId","splitName","domainName","methodName","domainProxy","error","onEvent","doSend","newId","DEFAULT_DEVTOOLS_URL","MultiplexServer","logging","remoteClient","m","match","Error","listenPort","app","reportHttpError","req","err","originalUrl","template","get","res","refreshTargets","multiplex","webSocketDebuggerUrl","title","str","catch","getContentType","response","contentType","headers","pos","indexOf","substring","getJson","obj","warn","ex","copyToClient","set","targets","_addTarget","proxy","proxies","_proxies","isUnused","info","targetsById","status","json","version","webServer","createServer","pathname","uuid","destroy","type","connect","upgrade","listen","express","oldTargets","oldTargetsById","src","RESERVED_KEYWORDS","devtoolsFrontendUrl","originalDevtoolsFrontendUrl","chunk","end","value"],"mappings":"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","file":"multiplex.js","sourcesContent":["/*************************************************************************\n\n   chrome-remote-multiplex\n\n   https://github.com/johnspackman/chrome-remote-multiplex\n\n   Copyright:\n     2017 Zenesis Limited \n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * John Spackman <john.spackman@zenesis.com> (johnspackman)\n\n************************************************************************ */\n\n\nconst Protocol = require('chrome-remote-interface').Protocol;\nconst EventEmitter = require('events');\nconst WebSocket = require('ws');\nconst Express = require('express');\nconst Http = require('http');\nconst Url = require('url');\nconst Dot = require('dot'); \n\nvar PACKAGE = require(\"../package.json\");\n\nclass Logger {\n  constructor() {\n    this.mode = \"info\";\n  }\n  \n  log(...args) {\n    console.log(...args);\n  }\n  \n  info(...args) {\n    this.log(...args);\n  }\n\n  error(...args) {\n    this.log(...args);\n  }\n\n  debug(...args) {\n    if (this.mode === \"debug\")\n      this.log(...args);\n  }\n}\n\nconst LOG = new Logger();\n\n\n/**\n * Used by ProxyDomain-derived classes to create an API method called apiName; the API\n * can have methods `send` and `reply` which are bound to `self`; a promise is created\n * in `api.replied` which is satisfied after the `reply` method has been called\n *  \n * @param self\n * @param apiName\n * @param api\n * @returns\n */\nfunction addApi(self, apiName, api) {\n  for (var name in api) {\n    var fn = api[name];\n    if (typeof fn === \"function\")\n      api[name] = api[name].bind(self);\n  }\n  \n  var tmp = null;\n  api.replied = new Promise((resolve, reject) => {\n    tmp = { resolve, reject };\n  });\n  api.replied.resolve = tmp.resolve;\n  api.replied.reject = tmp.reject;\n  \n  self[apiName] = api;\n}\n\n\n/**\n * ProxyDomain is the base class for creating a proxy of one of the protocol domains;\n * by default, all requests for domains are just bounced to the server and back, with\n * events being broadcast to all clients.  The ProxyDomain class provides a mechanism\n * for the multiplexer to intercept that communication (eg Runtime domain has to collate\n * responses) \n */\nclass ProxyDomain extends EventEmitter {\n  \n  constructor(remoteDebuggerProxy) {\n    super();\n    this.remoteDebuggerProxy = remoteDebuggerProxy;\n  }\n  \n  onEvent(data) {\n  }\n}\n\n\n/**\n * ProxyDomain implementation for most domains; it collects enable/disable into a single\n * enable/disable with a reference count\n */\nclass DefaultProxyDomain extends ProxyDomain {\n  constructor(remoteDebuggerProxy) {\n    super(remoteDebuggerProxy);\n    this._enabled = 0;\n  \n    addApi(this, \"enable\", {\n      send(devtoolsClient, data, sendImpl) {\n        var t = this;\n        this._enabled++;\n        if (t._enabled === 1) {\n          sendImpl(data);\n        } else {\n          t.enable.replied.then(() => {\n            return devtoolsClient.sendMessageToClient({ id: data.id, result: {} }, false);\n          });\n        }\n        \n        return false;\n      },\n      \n      reply(devtoolsClient, data) {\n        var t = this;\n        return devtoolsClient.sendMessageToClient(data).then(() => { \n          t.enable.replied.resolve(data);\n        });\n      }\n    });\n    \n    addApi(this, \"disable\", {\n      send(devtoolsClient, data, sendImpl) {\n        this._enabled--;\n        if (this._enabled === 0) {\n          sendImpl(data);\n        } else {\n          t.disable.replied.then((data) => {\n            return devtoolsClient.sendMessageToClient({ id: data.id, result: {} }, false);\n          });\n        }\n        \n        return false;\n      }\n    });\n  }\n}\n\n\n/**\n * Implementation of ProxyDomain for the Runtime domain.  Execution contexts have\n * to be tracked because the remote debug server will only publish them to us once,\n * so we have to store them and publish them to each client that attaches to us.\n */\nclass RuntimeProxyDomain extends ProxyDomain {\n  constructor(remoteDebuggerProxy) {\n    super(remoteDebuggerProxy);\n    this._enabled = 0;\n    this._executionContexts = {};\n    \n    addApi(this, \"enable\", {\n      send(devtoolsClient, data, sendImpl) {\n        var t = this;\n        this._enabled++;\n        if (t._enabled === 1) {\n          sendImpl(data);\n        } else {\n          t.enable.replied.then(() => {\n            var promises = [];\n            promises.push(devtoolsClient.sendMessageToClient({ id: data.id, result: {} }, false));\n            for (var id in t._executionContexts)\n              promises.push(devtoolsClient.sendMessageToClient(t._executionContexts[id], true));\n            \n            return Promise.all(promises);\n          });\n        }\n        \n        return false;\n      },\n      \n      reply(devtoolsClient, data) {\n        var t = this;\n        return devtoolsClient.sendMessageToClient(data).then(() => { \n          t.enable.replied.resolve(data);\n        });\n      },\n      \n      replied: null\n    });\n    \n    addApi(this, \"disable\", {\n      send(devtoolsClient, data, sendImpl) {\n        this._enabled--;\n        if (this._enabled === 0) {\n          sendImpl(data);\n        }\n        \n        return false;\n      }\n    });\n    \n  }\n\n  \n  onEvent(data) {\n    var t = this;\n    \n    if (data.method === \"Runtime.executionContextCreated\") {\n      t._executionContexts[data.params.context.id] = data;\n    } else if (data.method === \"Runtime.executionContextDestroyed\") {\n      delete t._executionContexts[data.params.contextId];\n    } else if (data.method === \"Runtime.executionContextsCleared\") {\n      t._executionContexts = {};\n    }\n  }\n}\n\n\n/**\n * Represents a single connection from a Devtools client\n */\nclass DevtoolsClient extends EventEmitter {\n  constructor(remoteDebuggerProxy, ws) {\n    super();\n    const t = this;\n    this.remoteDebuggerProxy = remoteDebuggerProxy;\n    this.ws = ws;\n    ws.on(\"close\", () => remoteDebuggerProxy.detach(this));\n    ws.on('message', function (data) {\n      const message = JSON.parse(data);\n      t.onMessageFromClient(message);\n    });\n  }\n  \n  close() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n  \n  onMessageFromClient(data) {\n    const t = this;\n    return t.remoteDebuggerProxy.sendMessageToServer(this, data);\n  }\n  \n  sendMessageToClient(data, broadcast) {\n    const t = this;\n    \n    return promisify((cb) => {\n      LOG.debug(\"REPLY: \" + JSON.stringify(data));\n      t.ws.send(JSON.stringify(data), cb);\n    });\n  }\n}\n\n\n/**\n * Represents the single connection to the remote devtools debugger (ie Headless Chrome),\n * and tracks the multiple DevtoolsClient instances which attach to it\n */\nclass RemoteDebuggerProxy extends EventEmitter {\n  constructor(multiplexServer, target) {\n    super();\n    this.multiplexServer = multiplexServer;\n    this.target = target;\n    this.devtoolsClients = [];\n    this._idMap = {};\n    this._nextCommandId = 1;\n    this._domainProxies = {\n        Runtime: new RuntimeProxyDomain(this)\n    };\n  }\n\n  /**\n   * Connects to the remote debugger instance (ie Chrome Headless)\n   */\n  connect() {\n    const t = this;\n    Protocol(t.options).then((data) => {\n      data.descriptor.domains.forEach((domain) => {\n        if (t._domainProxies[domain.domain] !== undefined)\n          return;\n        var cmdEnable = null;\n        var cmdDisable = null;\n        domain.commands.forEach((command) => {\n          if (command.name === \"enable\")\n            cmdEnable = command;\n          else if (command.name === \"disable\")\n            cmdDisable = command;\n        });\n        if (cmdEnable || cmdDisable) {\n          LOG.debug(\"Creating default domain for \" + domain.domain);\n          t._domainProxies[domain.domain] = new DefaultProxyDomain(this);\n        }\n      });\n    });\n    return new Promise((resolve, reject) => {\n      var url = t.target.originalWebSocketDebuggerUrl;\n      url = url.replace(/localhost\\:/g, t.multiplexServer.options.remoteClientHostname + \":\");\n      var ws = t.ws = new WebSocket(url);\n      ws.on('open', resolve);\n      ws.on('close', function (code) {\n        t.emit('disconnect');\n      });\n      ws.on('error', reject);\n      ws.on('message', function (data) {\n        const message = JSON.parse(data);\n        t.onMessageFromServer(message);\n      });\n    });\n  }\n  \n  /**\n   * Closes the connection to the server and clients\n   */\n  close() {\n    if (this.ws) {\n      var ws = this.ws;\n      this.ws = null;\n      ws.close();\n      this.devtoolsClients.forEach((client) => client.close());\n      this.emit(\"close\");\n    }\n  }\n\n  /**\n   * Returns true if there are no devtools clients \n   */\n  isUnused() {\n    return this.devtoolsClients.length == 0;\n  }\n  \n  /**\n   * Detaches a DevTools client\n   */\n  detach(devtoolsClient) {\n    for (var i = 0; i < this.devtoolsClients.length; i++)\n      if (this.devtoolsClients[i] === devtoolsClient) {\n        this.devtoolsClients.splice(i, 1);\n        break;\n      }\n    this.target.numberOfClients = this.devtoolsClients.length;\n    if (!!this.ws && this.autoClose && this.devtoolsClients.length == 0)\n      this.closeTarget().then(() => this.close());\n  }\n  \n  /**\n   * Attaches a DevTools client\n   */\n  attach(devtoolsClient) {\n    this.devtoolsClients.push(devtoolsClient);\n    this.target.numberOfClients = this.devtoolsClients.length;\n  }\n  \n  /**\n   * Shutsdown the target\n   */\n  closeTarget() {\n    var t = this;\n    return httpGet({\n      hostname: t.multiplexServer.options.remoteClientHostname,\n      port: t.multiplexServer.options.remoteClientPort,\n      path: \"/json/close/\" + t.target.id,\n      method: 'GET'\n    });\n  }\n  \n  /**\n   * Upgrade request from express\n   */\n  upgrade(request, socket, head) {\n    const t = this;\n    const wss = new WebSocket.Server({ noServer: true });\n\n    wss.handleUpgrade(request, socket, head, (ws) => {\n      var devtoolsClient = new DevtoolsClient(t, ws);\n      t.attach(devtoolsClient);\n      wss.emit('connection', ws);\n    });\n  }\n  \n  /**\n   * Handles a message from the remote debugger\n   */\n  onMessageFromServer(data) {\n    const t = this;\n    \n    LOG.debug('SERVER: %s...', JSON.stringify(data));\n    \n    // Map API IDs back to client'ss original ID\n    if (data.id) {\n      var map = t._idMap[data.id];\n      if (map) {\n        data.id = map.originalId;\n        \n        // Offer to domain specific proxies\n        var [ domainName, methodName ] = splitName(map.data.method);\n        var domainProxy = this._domainProxies[domainName];\n        var api = domainProxy && domainProxy[methodName];\n        if (api && typeof api.reply === \"function\") {\n          var result = api.reply(map.devtoolsClient, data);\n          if (result !== undefined)\n            return result;\n        }\n        \n        // Just bounce it straight on\n        return map.devtoolsClient.sendMessageToClient(data);\n      } else {\n        LOG.error(\"Server message for id \" + data.id + \" not matched\");\n        return;\n      }\n    }\n    \n    // Handle events - offer to domain specific proxy\n    var [ domainName, methodName ] = splitName(data.method);\n    var domainProxy = this._domainProxies[domainName];\n    if (domainProxy) {\n      var result = domainProxy.onEvent(data);\n      if (result !== undefined)\n        return result;\n    }\n    \n    // Pass event on\n    this.devtoolsClients.forEach(function(devtoolsClient) {\n      devtoolsClient.sendMessageToClient(data, true);\n    });\n  }\n  \n  /**\n   * Allows a DevToolsClient to send a message to the server; handles mapping the\n   * client's own ID to a global one for the server \n   */\n  sendMessageToServer(devtoolsClient, data) {\n    const t = this;\n    \n    LOG.debug('CLIENT: %s...', JSON.stringify(data));\n    \n    // Offer the domain proxy the opportunity to handle the method call\n    if (data.method) {\n      var [ domainName, methodName ] = splitName(data.method);\n      var domainProxy = this._domainProxies[domainName];\n      var api = domainProxy && domainProxy[methodName];\n      if (api && typeof api.send === \"function\") {\n        var result = api.send(devtoolsClient, data, doSend);\n        if (result !== undefined)\n          return result;\n      }\n    }\n    \n    // Just send it\n    return doSend(data);\n    \n    function doSend(data) {\n      if (data.id !== undefined) {\n        var newId = t._nextCommandId++;\n        t._idMap[newId] = {\n            newId,\n            originalId: data.id,\n            data: data,\n            devtoolsClient\n        };\n        data.id = newId;\n      }\n      \n      return promisify((cb) => {\n        t.ws.send(JSON.stringify(data), cb);\n      });\n    }\n  }\n}\n\n\n/**\n * This is the main server instance that clients connect to; it contains the ExpressJS server,\n * communicates with the remote debug server, and establishes RemoteDebuggerProxy instances\n * for each remote target \n * \n */\n\nconst DEFAULT_DEVTOOLS_URL = \"https://chrome-devtools-frontend.appspot.com/serve_file/@4b9102f9588fb6cf639a6165fd4777658d5ade0d/inspector.html?\";\n\nexport default class MultiplexServer extends EventEmitter {\n  constructor(options) {\n    super();\n    options = options||{};\n    if (options.logging === \"debug\")\n      LOG.mode = \"debug\";\n    var remoteClient = options.remoteClient;\n    if (remoteClient !== undefined) {\n      var m = remoteClient.match(/^([^:]+)(:([0-9]+))?$/);\n      if (m) {\n        options.remoteClientHostname = m[1];\n        options.remoteClientPort = m[3];\n      } else {\n        throw new Error(\"Cannot interpret remoteClient - found \" + remoteClient + \", expected something like 'localhost:9222'\");\n      }\n    }\n    this.options = {\n      listenPort: options.listenPort || 9223,\n      remoteClientHostname: options.remoteClientHostname||\"localhost\",\n      remoteClientPort: options.remoteClientPort||9222\n    };\n    this.options.remoteClient = this.options.remoteClientHostname + \":\" + this.options.remoteClientPort;\n  }\n\n  listen() {\n    const t = this;\n    \n    const app = Express();\n\n    function reportHttpError(req, err) {\n      LOG.error(\"Error in \" + req.method + \" \" + req.originalUrl + \": \" + err);\n    }\n    \n    /*\n     * Web page that provides links to debug\n     */\n    (function() {\n// https://chrome-devtools-frontend.appspot.com/serve_file/@4b9102f9588fb6cf639a6165fd4777658d5ade0d/inspector.html?ws=localhost:9223/devtools/page/1e371c5b-25ef-4ee9-9ef6-3ca11d9d59ee&remoteFrontend=true\n      \n      var template = Dot.template(\n`<html><body>\n  <h1>Headless proxy</h1>\n  <ul>\n    {{~ it.multiplex.targets :target }}\n          <li>\n            <a href=\"{{= it.url(target) }}\">\n              {{= it.title(target) }}\n            </a>\n          </li>\n    {{~}}\n  </ul>\n</body></html>`);\n    \n      app.get('/', function (req, res) {\n        t.refreshTargets()\n          .then(function() {\n            res.send(template({\n              multiplex: t,\n              DEFAULT_DEVTOOLS_URL: DEFAULT_DEVTOOLS_URL,\n              url: function(target) { \n                return DEFAULT_DEVTOOLS_URL + target.webSocketDebuggerUrl.replace(/^ws:\\/\\//, \"ws=/\") + \"&remoteFrontend=true\";\n              },\n              title: function(target) {\n                var str = target.title;\n                if (target.autoClose)\n                  str += \" (set to auto-close)\";\n                return str;\n              }\n            }));\n          })\n          .catch(reportHttpError.bind(this, req));\n      });\n    })();\n    \n    function getContentType(response) {\n      var contentType = response.headers[\"content-type\"];\n      if (contentType) {\n        var pos = contentType.indexOf(';');\n        contentType = contentType.substring(0, pos);\n      }\n      return contentType;\n    }\n\n    // Gets JSON from the remote server\n    function getJson(path) {\n      return httpGet({\n        hostname: t.options.remoteClientHostname,\n        port: t.options.remoteClientPort,\n        path: path,\n        method: 'GET'\n      }).then((obj) => {\n        var contentType = getContentType(obj.response);\n        if (contentType !== \"application/json\")\n          LOG.warn(\"Expecting JSON from \" + path + \" but found wrong content type: \" + contentType);\n        \n        try {\n          return JSON.parse(obj.data);\n        } catch(ex) {\n          LOG.warn(\"Cannot parse JSON returned from \" + path);\n          return null;\n        }\n      });\n    }\n    \n    // Gets JSON from the remote server and copies it to the client\n    function copyToClient(req, res) {\n      return httpGet({\n        hostname: t.options.remoteClientHostname,\n        port: t.options.remoteClientPort,\n        path: req.originalUrl,\n        method: 'GET'\n      }).then((obj) => {\n        var contentType = getContentType(obj.response);\n        if (contentType)\n          res.set(\"Content-Type\", contentType);\n        res.send(obj.data);\n      });\n    }\n    \n    // REST API: list targets\n    app.get([\"/json\", \"/json/list\"], (req, res) => {\n      t.refreshTargets()\n        .then(function() {\n          res.set(\"Content-Type\", \"application/json\");\n          res.send(JSON.stringify(t.targets, null, 2));\n        })\n        .catch(reportHttpError.bind(this, req));\n    });\n    \n    // REST API: create a new target\n    app.get('/json/new', (req, res) => {\n      return getJson(\"/json/new\").then(function(target) {\n        if (target)\n          target = t._addTarget(target);\n        res.set(\"Content-Type\", \"application/json\");\n        res.send(JSON.stringify(target, null, 2));\n      });\n    });\n    \n    // REST API: close a target\n    app.get('/json/close/*', (req, res) => {\n      return httpGet({\n        hostname: t.options.remoteClientHostname,\n        port: t.options.remoteClientPort,\n        path: req.originalUrl,\n        method: 'GET'\n      }).then((obj) => {\n        var id = req.originalUrl.match(/\\/json\\/close\\/(.*)$/)[1];\n        var proxy = t.proxies[id];\n        if (proxy)\n          proxy.close();\n        \n        var contentType = getContentType(obj.response);\n        if (contentType)\n          res.set(\"Content-Type\", contentType);\n        res.send(obj.data);\n      });\n    });\n    \n    // REST API: auto-close a target\n    app.get('/json/auto-close/*', (req, res) => {\n      t.refreshTargets()\n        .then(() => {\n          var id = req.originalUrl.match(/\\/json\\/auto-close\\/(.*)$/)[1];\n          var proxy = t._proxies[id];\n          if (proxy) {\n            if (proxy.isUnused()) {\n              proxy.closeTarget().close();\n              LOG.info(\"Closing target \" + id + \" due to /json/auto-close\")\n              res.send(\"Target is closing\");\n            } else {\n              proxy.autoClose = true;\n              t.targetsById[id].autoClose = true;\n              LOG.info(\"Marking target \" + id + \" to auto close\")\n              res.send(\"Target set to auto close\");\n            }\n          } else {\n            var target = t.targetsById[id];\n            if (target) {\n              target.autoClose = true;\n              LOG.info(\"Marking target \" + id + \" to auto close after first use\")\n              res.send(\"Target will close after first use\");\n            } else \n              res.status(500).send(\"Unrecognised target id \" + id);\n          }\n        });\n    });\n    \n    // REST API: get version numbers\n    app.get('/json/version', (req, res) => {\n      return getJson(req.originalUrl).then(function(json) {\n        json[\"Chrome-Remote-Multiplex-Version\"] = PACKAGE.version;\n        res.set(\"Content-Type\", \"application/json\");\n        res.send(JSON.stringify(json, null, 2));\n      });\n    });\n\n    app.get('/json/protocol', copyToClient);\n    app.get('/json/activate', copyToClient);\n\n    const webServer = Http.createServer(app);\n    const proxies = this._proxies = {};\n\n    // Upgrade the connection from ExpressJS\n    webServer.on('connection', (socket) => {\n      LOG.debug(\"WEB: connection\");\n    });\n    webServer.on('request', (req, res) => {\n      LOG.debug(\"WEB: request\");\n    });\n    webServer.on('upgrade', (request, socket, head) => {\n      LOG.debug(\"WEB: upgrade\");\n      const pathname = Url.parse(request.url).pathname;\n      var m = pathname.match(/\\/([^\\/]+)$/);\n      var uuid = (m && m[1])||null;\n      \n      if (!uuid) {\n        LOG.error(\"Cannot find UUID in \" + pathname);\n        socket.destroy();\n        return;\n      }\n      \n      t.refreshTargets().then(function() {\n        var target = t.targetsById[uuid];\n        if (!target) {\n          LOG.error(\"Cannot find target for \" + uuid);\n          socket.destroy();\n          return;\n        }\n        \n        var proxy = proxies[uuid];\n        if (!proxy) {\n          if (!target.webSocketDebuggerUrl || target.type !== \"page\") {\n            LOG.error(\"Target \" + uuid + \" not eligable for connection\");\n            socket.destroy();\n            return;\n          }\n          proxy = proxies[uuid] = new RemoteDebuggerProxy(t, target);\n          proxy.connect().then(function() {\n            return proxy.upgrade(request, socket, head);\n          });\n          proxy.on('close', () => {\n            delete t.targetsById[uuid];\n            for (var i = 0; i < t.targets.length; i++)\n              if (t.targets[i].id === uuid) {\n                t.targets.splice(i, 1);\n                break;\n              }\n          });\n          if (target.autoClose)\n            proxy.autoClose = true;\n      \n        } else {\n          return proxy.upgrade(request, socket, head);\n        }\n      });\n    });\n    \n    return new Promise((resolve, reject) => {\n      LOG.debug(\"Starting Express server\");\n      webServer.listen(t.options.listenPort, resolve);\n    })\n  }\n  \n  /**\n   * Shuts down\n   */\n  close() {\n    this.express.close();\n    this.express = null;\n  }\n  \n  /**\n   * Rediscovers all targets at the remote server that can be connected to\n   */\n  refreshTargets() {\n    var t = this;\n    return httpGet({\n      hostname: t.options.remoteClientHostname,\n      port: t.options.remoteClientPort,\n      path: '/json',\n      method: 'GET'\n    }).then(function(obj) {\n      var json = null;\n      if (!obj.data) {\n        LOG.debug(\"No data received from \" + t.options.remoteClient);\n        return;\n      }\n      try {\n        json = JSON.parse(obj.data);\n      } catch(ex) {\n        LOG.error(\"Error while parsing JSON from \" + t.options.remoteClient + \": \" + ex);\n        return;\n      }\n      var oldTargets = t.targets;\n      var oldTargetsById = t.targetsById||{};\n      t.targets = json;\n      t.targetsById = {};\n      for (var i = 0; i < t.targets.length; i++) {\n        var target = t.targets[i];\n        t.targets[i] = t._addTarget(target, oldTargetsById[target.id]);\n      }\n    });\n  }\n  \n  /**\n   * Adds a target\n   */\n  _addTarget(src, target) {\n    const RESERVED_KEYWORDS = [ \n      \"description\", \"id\", \"title\", \"type\", \"url\", \"devtoolsFrontendUrl\", \"webSocketDebuggerUrl\", \n      \"originalDevtoolsFrontendUrl\", \"originalWebSocketDebuggerUrl\" ];\n    \n    var t = this;\n    if (!target)\n      target = {};\n\n    for (var name in src)\n      target[name] = src[name];\n\n    if (target.devtoolsFrontendUrl)\n      target.originalDevtoolsFrontendUrl = target.devtoolsFrontendUrl;\n    target.devtoolsFrontendUrl = \"/devtools/inspector.html?ws=localhost:\" + t.options.listenPort + \"/devtools/page/\" + target.id;\n    if (target.webSocketDebuggerUrl)\n      target.originalWebSocketDebuggerUrl = target.webSocketDebuggerUrl;\n    target.webSocketDebuggerUrl = \"ws://localhost:\" + t.options.listenPort + \"/devtools/page/\" + target.id;\n    target.title += \" (proxied)\";\n\n    if (target.numberOfClients === undefined)\n      target.numberOfClients = 0;\n    \n    return t.targetsById[target.id] = target;\n  }\n}\n\n/**\n * Does a simple HTTP GET\n * @return Promise - payload is the response context\n */\nfunction httpGet(options) {\n  return new Promise((resolve, reject) => {\n    var req = Http.request(options, function(response) {\n      var str = '';\n\n      response.on('data', function (chunk) {\n        str += chunk;\n      });\n\n      response.on('end', function () {\n        resolve({ data: str, response: response });\n      });\n    });\n    req.on('error', reject);\n    req.end();\n  });\n}\n\n/**\n * Simple promisify\n */\nfunction promisify(fn) {\n  return new Promise((resolve, reject) => {\n    fn(function(err, value) {\n      if (err)\n        reject(err);\n      else\n        resolve(value);\n    });\n  });\n}\n\n/**\n * Splits a string into domain and method \n */\nfunction splitName(method) {\n  var pos = method.indexOf('.');\n  if (pos < 0)\n    return [ null, method ];\n  var domainName = method.substring(0, pos);\n  var methodName = method.substring(pos + 1);\n  return [ domainName, methodName ];\n}\n\n"]}