{"version":3,"sources":["multiplex.js"],"names":["Protocol","require","EventEmitter","WebSocket","Express","Http","Url","Uuid","Dot","Logger","mode","log","LOG","addApi","self","apiName","api","name","fn","bind","tmp","replied","Promise","resolve","reject","ProxyDomain","remoteDebuggerProxy","data","DefaultProxyDomain","_enabled","send","devtoolsClient","sendImpl","t","enable","then","sendMessageToClient","id","result","reply","disable","RuntimeProxyDomain","_executionContexts","promises","push","all","method","params","context","contextId","DevtoolsClient","ws","on","detach","message","JSON","parse","onMessageFromClient","sendMessageToServer","broadcast","promisify","cb","debug","stringify","RemoteDebuggerProxy","multiplexServer","target","devtoolsClients","_idMap","_nextCommandId","_domainProxies","Runtime","options","descriptor","domains","forEach","domain","undefined","cmdEnable","cmdDisable","commands","command","url","originalWebSocketDebuggerUrl","replace","remoteClientHostname","code","emit","onMessageFromServer","i","length","splice","request","socket","head","wss","Server","noServer","handleUpgrade","attach","map","originalId","splitName","domainName","methodName","domainProxy","error","onEvent","doSend","newId","DEFAULT_DEVTOOLS_URL","MultiplexServer","logging","remoteClient","m","match","remoteClientPort","Error","listenPort","app","template","get","req","res","refreshTargets","multiplex","webSocketDebuggerUrl","getTargetList","set","targets","webServer","createServer","proxies","_proxies","pathname","uuid","destroy","targetsById","proxy","type","connect","upgrade","listen","express","close","httpGet","hostname","port","path","json","ex","regex","RegExp","devtoolsFrontendUrl","originalDevtoolsFrontendUrl","title","response","str","chunk","end","err","value","pos","indexOf","substring"],"mappings":"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","file":"multiplex.js","sourcesContent":["/*************************************************************************\n\n   chrome-remote-multiplex\n\n   https://github.com/johnspackman/chrome-remote-multiplex\n\n   Copyright:\n     2017 Zenesis Limited \n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * John Spackman <john.spackman@zenesis.com> (johnspackman)\n\n************************************************************************ */\n\n\nconst Protocol = require('chrome-remote-interface').Protocol;\nconst EventEmitter = require('events');\nconst WebSocket = require('ws');\nconst Express = require('express');\nconst Http = require('http');\nconst Url = require('url');\nconst Uuid = require('uuid');\nconst Dot = require('dot'); \n\n\nclass Logger {\n  constructor() {\n    this.mode = \"info\";\n  }\n  \n  log(...args) {\n    console.log(...args);\n  }\n  \n  error(...args) {\n    this.log(...args);\n  }\n\n  debug(...args) {\n    if (this.mode === \"debug\")\n      this.log(...args);\n  }\n}\n\nconst LOG = new Logger();\n\n\n/**\n * Used by ProxyDomain-derived classes to create an API method called apiName; the API\n * can have methods `send` and `reply` which are bound to `self`; a promise is created\n * in `api.replied` which is satisfied after the `reply` method has been called\n *  \n * @param self\n * @param apiName\n * @param api\n * @returns\n */\nfunction addApi(self, apiName, api) {\n  for (var name in api) {\n    var fn = api[name];\n    if (typeof fn === \"function\")\n      api[name] = api[name].bind(self);\n  }\n  \n  var tmp = null;\n  api.replied = new Promise((resolve, reject) => {\n    tmp = { resolve, reject };\n  });\n  api.replied.resolve = tmp.resolve;\n  api.replied.reject = tmp.reject;\n  \n  self[apiName] = api;\n}\n\n\n/**\n * ProxyDomain is the base class for creating a proxy of one of the protocol domains;\n * by default, all requests for domains are just bounced to the server and back, with\n * events being broadcast to all clients.  The ProxyDomain class provides a mechanism\n * for the multiplexer to intercept that communication (eg Runtime domain has to collate\n * responses) \n */\nclass ProxyDomain extends EventEmitter {\n  \n  constructor(remoteDebuggerProxy) {\n    super();\n    this.remoteDebuggerProxy = remoteDebuggerProxy;\n  }\n  \n  onEvent(data) {\n  }\n}\n\n\n/**\n * ProxyDomain implementation for most domains; it collects enable/disable into a single\n * enable/disable with a reference count\n */\nclass DefaultProxyDomain extends ProxyDomain {\n  constructor(remoteDebuggerProxy) {\n    super(remoteDebuggerProxy);\n    this._enabled = 0;\n  \n    addApi(this, \"enable\", {\n      send(devtoolsClient, data, sendImpl) {\n        var t = this;\n        this._enabled++;\n        if (t._enabled === 1) {\n          sendImpl(data);\n        } else {\n          t.enable.replied.then(() => {\n            return devtoolsClient.sendMessageToClient({ id: data.id, result: {} }, false);\n          });\n        }\n        \n        return false;\n      },\n      \n      reply(devtoolsClient, data) {\n        var t = this;\n        return devtoolsClient.sendMessageToClient(data).then(() => { \n          t.enable.replied.resolve(data);\n        });\n      }\n    });\n    \n    addApi(this, \"disable\", {\n      send(devtoolsClient, data, sendImpl) {\n        this._enabled--;\n        if (this._enabled === 0) {\n          sendImpl(data);\n        } else {\n          t.disable.replied.then((data) => {\n            return devtoolsClient.sendMessageToClient({ id: data.id, result: {} }, false);\n          });\n        }\n        \n        return false;\n      }\n    });\n  }\n}\n\n\n/**\n * Implementation of ProxyDomain for the Runtime domain.  Execution contexts have\n * to be tracked because the remote debug server will only publish them to us once,\n * so we have to store them and publish them to each client that attaches to us.\n */\nclass RuntimeProxyDomain extends ProxyDomain {\n  constructor(remoteDebuggerProxy) {\n    super(remoteDebuggerProxy);\n    this._enabled = 0;\n    this._executionContexts = {};\n    \n    addApi(this, \"enable\", {\n      send(devtoolsClient, data, sendImpl) {\n        var t = this;\n        this._enabled++;\n        if (t._enabled === 1) {\n          sendImpl(data);\n        } else {\n          t.enable.replied.then(() => {\n            var promises = [];\n            promises.push(devtoolsClient.sendMessageToClient({ id: data.id, result: {} }, false));\n            for (var id in t._executionContexts)\n              promises.push(devtoolsClient.sendMessageToClient(t._executionContexts[id], true));\n            \n            return Promise.all(promises);\n          });\n        }\n        \n        return false;\n      },\n      \n      reply(devtoolsClient, data) {\n        var t = this;\n        return devtoolsClient.sendMessageToClient(data).then(() => { \n          t.enable.replied.resolve(data);\n        });\n      },\n      \n      replied: null\n    });\n    \n    addApi(this, \"disable\", {\n      send(devtoolsClient, data, sendImpl) {\n        this._enabled--;\n        if (this._enabled === 0) {\n          sendImpl(data);\n        }\n        \n        return false;\n      }\n    });\n    \n  }\n\n  \n  onEvent(data) {\n    var t = this;\n    \n    if (data.method === \"Runtime.executionContextCreated\") {\n      t._executionContexts[data.params.context.id] = data;\n    } else if (data.method === \"Runtime.executionContextDestroyed\") {\n      delete t._executionContexts[data.params.contextId];\n    } else if (data.method === \"Runtime.executionContextsCleared\") {\n      t._executionContexts = {};\n    }\n  }\n}\n\n\n/**\n * Represents a single connection from a Devtools client\n */\nclass DevtoolsClient extends EventEmitter {\n  constructor(remoteDebuggerProxy, ws) {\n    super();\n    const t = this;\n    this.remoteDebuggerProxy = remoteDebuggerProxy;\n    this.ws = ws;\n    ws.on(\"close\", () => remoteDebuggerProxy.detach(this));\n    ws.on('message', function (data) {\n      const message = JSON.parse(data);\n      t.onMessageFromClient(message);\n    });\n  }\n  \n  onMessageFromClient(data) {\n    const t = this;\n    return t.remoteDebuggerProxy.sendMessageToServer(this, data);\n  }\n  \n  sendMessageToClient(data, broadcast) {\n    const t = this;\n    \n    return promisify((cb) => {\n      LOG.debug(\"REPLY: \" + JSON.stringify(data));\n      t.ws.send(JSON.stringify(data), cb);\n    });\n  }\n}\n\n\n/**\n * Represents the single connection to the remote devtools debugger (ie Headless Chrome),\n * and tracks the multiple DevtoolsClient instances which attach to it\n */\nclass RemoteDebuggerProxy extends EventEmitter {\n  constructor(multiplexServer, target) {\n    super();\n    this.multiplexServer = multiplexServer;\n    this.target = target;\n    this.devtoolsClients = [];\n    this._idMap = {};\n    this._nextCommandId = 1;\n    this._domainProxies = {\n        Runtime: new RuntimeProxyDomain(this)\n    };\n  }\n\n  /**\n   * Connects to the remote debugger instance (ie Chrome Headless)\n   */\n  connect() {\n    const t = this;\n    Protocol(t.options).then((data) => {\n      data.descriptor.domains.forEach((domain) => {\n        if (t._domainProxies[domain.domain] !== undefined)\n          return;\n        var cmdEnable = null;\n        var cmdDisable = null;\n        domain.commands.forEach((command) => {\n          if (command.name === \"enable\")\n            cmdEnable = command;\n          else if (command.name === \"disable\")\n            cmdDisable = command;\n        });\n        if (cmdEnable || cmdDisable) {\n          LOG.debug(\"Creating default domain for \" + domain.domain);\n          t._domainProxies[domain.domain] = new DefaultProxyDomain(this);\n        }\n      });\n    });\n    return new Promise((resolve, reject) => {\n      var url = t.target.originalWebSocketDebuggerUrl;\n      url = url.replace(/localhost\\:/g, t.multiplexServer.options.remoteClientHostname + \":\");\n      var ws = t.ws = new WebSocket(url);\n      ws.on('open', resolve);\n      ws.on('close', function (code) {\n        t.emit('disconnect');\n      });\n      ws.on('error', reject);\n      ws.on('message', function (data) {\n        const message = JSON.parse(data);\n        t.onMessageFromServer(message);\n      });\n    });\n  }\n  \n  /**\n   * Detaches a DevTools client\n   */\n  detach(devtoolsClient) {\n    for (var i = 0; i < this.devtoolsClients.length; i++)\n      if (this.devtoolsClients[i] === devtoolsClient) {\n        this.devtoolsClients.splice(i, 1);\n        return;\n      }\n  }\n  \n  /**\n   * Attaches a DevTools client\n   */\n  attach(devtoolsClient) {\n    this.devtoolsClients.push(devtoolsClient);\n  }\n  \n  /**\n   * Upgrade request from express\n   */\n  upgrade(request, socket, head) {\n    const t = this;\n    const wss = new WebSocket.Server({ noServer: true });\n\n    wss.handleUpgrade(request, socket, head, (ws) => {\n      var devtoolsClient = new DevtoolsClient(t, ws);\n      t.attach(devtoolsClient);\n      wss.emit('connection', ws);\n    });\n  }\n  \n  /**\n   * Handles a message from the remote debugger\n   */\n  onMessageFromServer(data) {\n    const t = this;\n    \n    LOG.debug('SERVER: %s...', JSON.stringify(data));\n    \n    // Map API IDs back to client'ss original ID\n    if (data.id) {\n      var map = t._idMap[data.id];\n      if (map) {\n        data.id = map.originalId;\n        \n        // Offer to domain specific proxies\n        var [ domainName, methodName ] = splitName(map.data.method);\n        var domainProxy = this._domainProxies[domainName];\n        var api = domainProxy && domainProxy[methodName];\n        if (api && typeof api.reply === \"function\") {\n          var result = api.reply(map.devtoolsClient, data);\n          if (result !== undefined)\n            return result;\n        }\n        \n        // Just bounce it straight on\n        return map.devtoolsClient.sendMessageToClient(data);\n      } else {\n        LOG.error(\"Server message for id \" + data.id + \" not matched\");\n        return;\n      }\n    }\n    \n    // Handle events - offer to domain specific proxy\n    var [ domainName, methodName ] = splitName(data.method);\n    var domainProxy = this._domainProxies[domainName];\n    if (domainProxy) {\n      var result = domainProxy.onEvent(data);\n      if (result !== undefined)\n        return result;\n    }\n    \n    // Pass event on\n    this.devtoolsClients.forEach(function(devtoolsClient) {\n      devtoolsClient.sendMessageToClient(data, true);\n    });\n  }\n  \n  /**\n   * Allows a DevToolsClient to send a message to the server; handles mapping the\n   * client's own ID to a global one for the server \n   */\n  sendMessageToServer(devtoolsClient, data) {\n    const t = this;\n    \n    LOG.debug('CLIENT: %s...', JSON.stringify(data));\n    \n    // Offer the domain proxy the opportunity to handle the method call\n    if (data.method) {\n      var [ domainName, methodName ] = splitName(data.method);\n      var domainProxy = this._domainProxies[domainName];\n      var api = domainProxy && domainProxy[methodName];\n      if (api && typeof api.send === \"function\") {\n        var result = api.send(devtoolsClient, data, doSend);\n        if (result !== undefined)\n          return result;\n      }\n    }\n    \n    // Just send it\n    return doSend(data);\n    \n    function doSend(data) {\n      if (data.id !== undefined) {\n        var newId = t._nextCommandId++;\n        t._idMap[newId] = {\n            newId,\n            originalId: data.id,\n            data: data,\n            devtoolsClient\n        };\n        data.id = newId;\n      }\n      \n      return promisify((cb) => {\n        t.ws.send(JSON.stringify(data), cb);\n      });\n    }\n  }\n}\n\n\n/**\n * This is the main server instance that clients connect to; it contains the ExpressJS server,\n * communicates with the remote debug server, and establishes RemoteDebuggerProxy instances\n * for each remote target \n * \n */\n\nconst DEFAULT_DEVTOOLS_URL = \"https://chrome-devtools-frontend.appspot.com/serve_file/@4b9102f9588fb6cf639a6165fd4777658d5ade0d/inspector.html?\";\n\nexport default class MultiplexServer extends EventEmitter {\n  constructor(options) {\n    super();\n    options = options||{};\n    if (options.logging === \"debug\")\n      LOG.mode = \"debug\";\n    var remoteClient = options.remoteClient;\n    if (remoteClient !== undefined) {\n      var m = remoteClient.match(/^([^:]+)(:([0-9]+))?$/);\n      if (m) {\n        options.remoteClientHostname = m[1];\n        options.remoteClientPort = m[3];\n      } else {\n        throw new Error(\"Cannot interpret remoteClient - found \" + remoteClient + \", expected something like 'localhost:9222'\");\n      }\n    }\n    this.options = {\n      listenPort: options.listenPort || 9223,\n      remoteClientHostname: options.remoteClientHostname||\"localhost\",\n      remoteClientPort: options.remoteClientPort||9222\n    };\n    this.options.remoteClient = this.options.remoteClientHostname + \":\" + this.options.remoteClientPort;\n  }\n\n  listen() {\n    const t = this;\n    \n    const app = Express();\n\n    /*\n     * Web page that provides links to debug\n     */\n    (function() {\n// https://chrome-devtools-frontend.appspot.com/serve_file/@4b9102f9588fb6cf639a6165fd4777658d5ade0d/inspector.html?ws=localhost:9223/devtools/page/1e371c5b-25ef-4ee9-9ef6-3ca11d9d59ee&remoteFrontend=true\n      \n      var template = Dot.template(\n`<html><body>\n  <h1>Headless proxy</h1>\n  <ul>\n    {{~ it.multiplex.targets :target }}\n          <li>\n            <a href=\"{{= it.url(target) }}\">\n              {{= target.title }}\n            </a>\n          </li>\n    {{~}}\n  </ul>\n</body></html>`);\n    \n      app.get('/', function (req, res) {\n        t.refreshTargets().then(function() {\n          res.send(template({\n            multiplex: t,\n            DEFAULT_DEVTOOLS_URL: DEFAULT_DEVTOOLS_URL,\n            url: function(target) { \n              return DEFAULT_DEVTOOLS_URL + target.webSocketDebuggerUrl.replace(/^ws:\\/\\//, \"ws=/\") + \"&remoteFrontend=true\";\n            }\n          }));\n        });\n      });\n    })();\n\n    /*\n     * JSON data showing the targets which can be connected to\n     */\n    function getTargetList(req, res) {\n      t.refreshTargets().then(function() {\n        res.set('Content-Type', 'text/json');\n        res.send(JSON.stringify(t.targets, null, 2));\n      });\n    }\n    app.get('/json', getTargetList);\n    app.get('/json/list', getTargetList);\n\n    const webServer = Http.createServer(app);\n    const proxies = this._proxies = {};\n\n    // Upgrade the connection from ExpressJS\n    webServer.on('connection', (socket) => {\n      LOG.debug(\"WEB: connection\");\n    });\n    webServer.on('request', (req, res) => {\n      LOG.debug(\"WEB: request\");\n    });\n    webServer.on('upgrade', (request, socket, head) => {\n      LOG.debug(\"WEB: upgrade\");\n      const pathname = Url.parse(request.url).pathname;\n      var m = pathname.match(/\\/([^\\/]+)$/);\n      var uuid = (m && m[1])||null;\n      \n      if (!uuid) {\n        LOG.error(\"Cannot find UUID in \" + pathname);\n        socket.destroy();\n        return;\n      }\n      \n      t.refreshTargets().then(function() {\n        var target = t.targetsById[uuid];\n        if (!target) {\n          LOG.error(\"Cannot find target for \" + uuid);\n          socket.destroy();\n          return;\n        }\n        \n        var proxy = proxies[uuid];\n        if (!proxy) {\n          if (!target.webSocketDebuggerUrl || target.type !== \"page\") {\n            LOG.error(\"Target \" + uuid + \" not eligable for connection\");\n            socket.destroy();\n            return;\n          }\n          proxy = proxies[uuid] = new RemoteDebuggerProxy(t, target);\n          proxy.connect().then(function() {\n            return proxy.upgrade(request, socket, head);\n          })\n        } else {\n          return proxy.upgrade(request, socket, head);\n        }\n      });\n    });\n    \n    return new Promise((resolve, reject) => {\n      LOG.debug(\"Starting Express server\");\n      webServer.listen(t.options.listenPort, resolve);\n    })\n  }\n  \n  /**\n   * Shuts down\n   */\n  close() {\n    this.express.close();\n    this.express = null;\n  }\n  \n  /**\n   * Rediscovers all targets at the remote server that can be connected to\n   */\n  refreshTargets() {\n    var t = this;\n    return httpGet({\n      hostname: t.options.remoteClientHostname,\n      port: t.options.remoteClientPort,\n      path: '/json',\n      method: 'GET'\n    }).then(function(data) {\n      var json = null;\n      if (!data) {\n        LOG.debug(\"No data received from \" + t.options.remoteClient);\n        return;\n      }\n      try {\n        json = JSON.parse(data);\n      } catch(ex) {\n        LOG.error(\"Error while parsing JSON from \" + t.options.remoteClient + \": \" + ex);\n        return;\n      }\n      t.targets = json;\n      t.targetsById = {};\n      var regex = new RegExp(\"localhost:\" + t.options.remoteClientPort);\n      json.forEach(function(target) {\n        if (target.devtoolsFrontendUrl)\n          target.originalDevtoolsFrontendUrl = target.devtoolsFrontendUrl;\n        target.devtoolsFrontendUrl = \"/devtools/inspector.html?ws=localhost:\" + t.options.listenPort + \"/devtools/page/\" + target.id;\n        if (target.webSocketDebuggerUrl)\n          target.originalWebSocketDebuggerUrl = target.webSocketDebuggerUrl;\n        target.webSocketDebuggerUrl = \"ws://localhost:\" + t.options.listenPort + \"/devtools/page/\" + target.id;\n        target.title += \" (proxied)\";\n        \n        t.targetsById[target.id] = target;\n      });\n    });\n  }\n}\n\n/**\n * Does a simple HTTP GET\n * @return Promise - payload is the response context\n */\nfunction httpGet(options) {\n  return new Promise((resolve, reject) => {\n    var req = Http.request(options, function(response) {\n      var str = '';\n\n      response.on('data', function (chunk) {\n        str += chunk;\n      });\n\n      response.on('end', function () {\n        resolve(str);\n      });\n    });\n    req.on('error', reject);\n    req.end();\n  });\n}\n\n/**\n * Simple promisify\n */\nfunction promisify(fn) {\n  return new Promise((resolve, reject) => {\n    fn(function(err, value) {\n      if (err)\n        reject(err);\n      else\n        resolve(value);\n    });\n  });\n}\n\n/**\n * Splits a string into domain and method \n */\nfunction splitName(method) {\n  var pos = method.indexOf('.');\n  if (pos < 0)\n    return [ null, method ];\n  var domainName = method.substring(0, pos);\n  var methodName = method.substring(pos + 1);\n  return [ domainName, methodName ];\n}\n\n"]}